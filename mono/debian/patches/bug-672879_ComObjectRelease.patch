From a6dfdc35b3c5bd26d6749d083f88cdf1c26c8241 Mon Sep 17 00:00:00 2001
From: Quilt patch <unknown@unknown.com>
Date: Tue, 30 Aug 2011 16:56:36 +0200
Subject: [PATCH] bug-672879_ComObjectRelease

FWNX-434
---
 mcs/class/corlib/System/__ComObject.cs |   37 ++++++++++++++++++++++++++++++-
 1 files changed, 35 insertions(+), 2 deletions(-)

diff --git a/mcs/class/corlib/System/__ComObject.cs b/mcs/class/corlib/System/__ComObject.cs
index 803f535..4cfd321 100644
--- a/mcs/class/corlib/System/__ComObject.cs
+++ b/mcs/class/corlib/System/__ComObject.cs
@@ -39,6 +39,33 @@ using System.Runtime.CompilerServices;
 
 namespace System
 {
+	/// <summary>
+	/// Interface to allow alternative ComObject release mechanisms to be specified.
+	/// </summary>
+	public interface IComObjectReleaser
+	{
+		/// <summary>
+		/// Marshal.Release needs to be called on pUnk parameter, to prevent memory leaks.
+		/// </summary>		
+		void Add(IntPtr pUnk);
+	}
+	
+	/// <summary>
+	/// Register an external IComObjectReleaser.
+	/// </summary>
+	public static class __ComObjectReleaser
+	{	
+		internal static IComObjectReleaser ComObjectReleaserImplementation;
+		
+		/// <summary>
+		/// Supply a alternative ComObject release implementation.		
+		/// </summary>
+		public static void Register(IComObjectReleaser comObjectReleaser)
+		{
+			ComObjectReleaserImplementation = comObjectReleaser;
+		}					
+	}
+	
 	// This is a private class that is used as a generic wrapper class
 	// for COM objects that have no specific wrapper class.
 	//
@@ -49,7 +76,7 @@ namespace System
 	// This class is referenced in .NET Framework SDK Documentation so
 	// many times that obj.GetType().FullName == "System.__ComObject" and
 	// Type.GetType("System.__ComObject") may be used.
-
+	
 	internal class __ComObject : MarshalByRefObject
 	{
 #pragma warning disable 169	
@@ -66,7 +93,13 @@ namespace System
 		private extern void ReleaseInterfaces ();
 
 		~__ComObject ()
-		{
+		{	
+			// If external ComObjectReleaserImplementation isn't supplied ComObject gets released by the GC thread.			
+			if (__ComObjectReleaser.ComObjectReleaserImplementation != null && iunknown != IntPtr.Zero)
+			{
+				Marshal.AddRef(iunknown);
+				__ComObjectReleaser.ComObjectReleaserImplementation.Add(iunknown);			
+			}
 			ReleaseInterfaces ();
 		}
 
-- 
1.7.4.1

