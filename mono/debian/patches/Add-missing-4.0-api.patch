From acbc8ff4598ac5cab5f75810bd44eef7b9688984 Mon Sep 17 00:00:00 2001
From: Marek Safar <marek.safar@gmail.com>
Date: Wed, 20 Apr 2011 12:41:29 +0100
Subject: [PATCH] Add missing 4.0 api

---
 .../System.Windows.Forms/SplitContainer.cs         |   15 +++++++++++++++
 .../ReflectionPermissionAttribute.cs               |    1 +
 .../corlib/System.Security/SecurityContext.cs      |   12 +++++++++++-
 .../corlib/System.Threading/ExecutionContext.cs    |   14 +++++++++++++-
 4 files changed, 40 insertions(+), 2 deletions(-)

Index: fieldworks-mono/mcs/class/Managed.Windows.Forms/System.Windows.Forms/SplitContainer.cs
===================================================================
--- fieldworks-mono.orig/mcs/class/Managed.Windows.Forms/System.Windows.Forms/SplitContainer.cs
+++ fieldworks-mono/mcs/class/Managed.Windows.Forms/System.Windows.Forms/SplitContainer.cs
@@ -43,6 +43,9 @@
 	[Docking (DockingBehavior.AutoDock)]
 	[Designer ("System.Windows.Forms.Design.SplitContainerDesigner, " + Consts.AssemblySystem_Design)]
 	public class SplitContainer : ContainerControl
+#if NET_4_0
+		, ISupportInitialize
+#endif
 	{
 		#region Local Variables
 		private FixedPanel fixed_panel;
@@ -478,6 +481,18 @@
 		#endregion
 
 		#region Public Methods
+#if NET_4_0
+		[MonoTODO]
+		public void BeginInit ()
+		{
+		}
+		
+		[MonoTODO]
+		public void EndInit ()
+		{
+		}
+#endif
+		
 		public void OnSplitterMoved (SplitterEventArgs e)
 		{
 			SplitterEventHandler eh = (SplitterEventHandler)(Events [SplitterMovedEvent]);
Index: fieldworks-mono/mcs/class/corlib/System.Security.Permissions/ReflectionPermissionAttribute.cs
===================================================================
--- fieldworks-mono.orig/mcs/class/corlib/System.Security.Permissions/ReflectionPermissionAttribute.cs
+++ fieldworks-mono/mcs/class/corlib/System.Security.Permissions/ReflectionPermissionAttribute.cs
@@ -73,6 +73,7 @@
 			}
 		}
 		
+		[Obsolete]
 		public bool ReflectionEmit
 		{
 			get { return reflectionEmit; }
Index: fieldworks-mono/mcs/class/corlib/System.Security/SecurityContext.cs
===================================================================
--- fieldworks-mono.orig/mcs/class/corlib/System.Security/SecurityContext.cs
+++ fieldworks-mono/mcs/class/corlib/System.Security/SecurityContext.cs
@@ -33,7 +33,11 @@
 
 namespace System.Security {
 
-	public sealed class SecurityContext {
+	public sealed class SecurityContext
+#if NET_4_0
+		: IDisposable
+#endif
+	{
 		private bool _capture;
 		private IntPtr _winid;
 		private CompressedStack _stack;
@@ -75,6 +79,12 @@
 			capture._stack = CompressedStack.Capture ();
 			return capture;
 		}
+		
+#if NET_4_0
+		public void Dispose ()
+		{
+		}
+#endif
 
 		// internal stuff
 
Index: fieldworks-mono/mcs/class/corlib/System.Threading/ExecutionContext.cs
===================================================================
--- fieldworks-mono.orig/mcs/class/corlib/System.Threading/ExecutionContext.cs
+++ fieldworks-mono/mcs/class/corlib/System.Threading/ExecutionContext.cs
@@ -35,7 +35,11 @@
 namespace System.Threading {
 
 	[Serializable]
-	public sealed class ExecutionContext : ISerializable {
+	public sealed class ExecutionContext : ISerializable
+#if NET_4_0
+		, IDisposable
+#endif
+	{
 #if !MOONLIGHT
 		private SecurityContext _sc;
 #endif
@@ -83,6 +87,14 @@
 
 			return new ExecutionContext (this);
 		}
+		
+#if NET_4_0
+		public void Dispose ()
+		{
+			if (_sc != null)
+				_sc.Dispose ();
+		}
+#endif
 
 		[MonoTODO]
 		[ReflectionPermission (SecurityAction.Demand, MemberAccess = true)]
