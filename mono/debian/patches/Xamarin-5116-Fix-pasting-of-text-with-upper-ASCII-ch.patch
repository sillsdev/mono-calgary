From 89770dfaa52046d487d27d8048a5dfc3b31db7dd Mon Sep 17 00:00:00 2001
From: Eberhard Beilharz <eb1@sil.org>
Date: Wed, 16 May 2012 12:49:16 +0200
Subject: [PATCH] Xamarin-5116: Fix pasting of text with upper-ASCII chars

Text copied to the clipboard by another app may contain
text in Latin-1 with upper-ASCII characters instead of
the UTF-8 encoding we expect.

Also fixed problem unescaping characters when they are
followed by more text.

Change-Id: Ib8d746d42c1d34dccf8ddbf8db28e1515952fe05
---
 .../System.Windows.Forms/XplatUIX11.cs             |   20 ++++++++++++++++++--
 1 files changed, 18 insertions(+), 2 deletions(-)

Index: fieldworks-mono/mcs/class/Managed.Windows.Forms/System.Windows.Forms/XplatUIX11.cs
===================================================================
--- fieldworks-mono.orig/mcs/class/Managed.Windows.Forms/System.Windows.Forms/XplatUIX11.cs
+++ fieldworks-mono/mcs/class/Managed.Windows.Forms/System.Windows.Forms/XplatUIX11.cs
@@ -1258,9 +1258,20 @@
 
 			if ((long)nitems > 0) {
 				if (property == (IntPtr)Atom.XA_STRING) {
+					// Xamarin-5116: PtrToStringAnsi expects to get UTF-8, but we might have
+					// Latin-1 instead.
+					var s = Marshal.PtrToStringAnsi (prop);
+					if (string.IsNullOrEmpty (s)) {
+						var sb = new StringBuilder ();
+						for (int i = 0; i < (int)nitems; i++) {
+							var b = Marshal.ReadByte (prop, i);
+							sb.Append ((char)b);
+						}
+						s = sb.ToString ();
+					}
 					// Some X managers/apps pass unicode chars as escaped strings, so
 					// we may need to unescape them.
-					Clipboard.Item = UnescapeUnicodeFromAnsi (Marshal.PtrToStringAnsi(prop));
+					Clipboard.Item = UnescapeUnicodeFromAnsi (s);
 				} else if (property == (IntPtr)Atom.XA_BITMAP) {
 					// FIXME - convert bitmap to image
 				} else if (property == (IntPtr)Atom.XA_PIXMAP) {
@@ -1313,7 +1324,7 @@
 
 				int length = 0;
 				while (pos < value.Length) {
-					if (!Char.IsLetterOrDigit (value [pos]))
+					if (!ValidHexDigit (value [pos]))
 						break;
 					length++;
 					pos++;
@@ -1335,6 +1346,11 @@
 			return sb.ToString ();
 		}
 
+		private static bool ValidHexDigit (char e)
+		{
+			return Char.IsDigit (e) || (e >= 'A' && e <= 'F') || (e >= 'a' && e <= 'f');
+		}
+
 		void AddExpose (Hwnd hwnd, bool client, int x, int y, int width, int height) {
 			// Don't waste time
 			if ((hwnd == null) || (x > hwnd.Width) || (y > hwnd.Height) || ((x + width) < 0) || ((y + height) < 0)) {
