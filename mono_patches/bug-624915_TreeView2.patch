FWNX-426 switching Flex views can cause infrequent ArgumentOutOfRangeException

Index: mono/mcs/class/Managed.Windows.Forms/System.Windows.Forms/TreeView.cs
===================================================================
--- mono/mcs/class/Managed.Windows.Forms/System.Windows.Forms/TreeView.cs.orig	2010-11-09 22:08:15.000000000 -0700
+++ mono/mcs/class/Managed.Windows.Forms/System.Windows.Forms/TreeView.cs	2010-11-09 22:08:54.000000000 -0700
@@ -764,6 +764,11 @@
 			Invalidate ();
 		}
 
+		void SetVScrollValue(int val)
+		{
+			vbar.Value = Math.Min (Math.Max (vbar.Minimum, val), vbar.Maximum);
+		}
+		
 		public void ExpandAll ()
 		{
 			BeginUpdate ();
@@ -790,7 +795,7 @@
 				return;
 
 			if (IsHandleCreated && vbar.VisibleInternal) {
-				vbar.Value = vbar.Maximum - VisibleCount + 1;
+				SetVScrollValue (vbar.Maximum - VisibleCount + 1);
 			} else {
 				RecalculateVisibleOrder (root_node);
 				UpdateScrollBars (true);
@@ -811,7 +816,7 @@
 			EndUpdate ();
 
 			if (vbar.VisibleInternal)
-				vbar.Value = vbar.Maximum - VisibleCount + 1;
+				SetVScrollValue (vbar.Maximum - VisibleCount + 1);
 		}
 
 		public TreeNode GetNodeAt (Point pt) {
@@ -1392,7 +1397,7 @@
 				return;
 			}
 
-			vbar.Value = Math.Min (order, vbar.Maximum - VisibleCount + 1);
+			SetVScrollValue (Math.Min (order, vbar.Maximum - VisibleCount + 1));
 		}
 
 		internal void SetBottom (TreeNode node)
@@ -1412,7 +1417,7 @@
 
 			int nv = vbar.Value + offset;
 			if (vbar.Value + offset < vbar.Maximum) {
-				vbar.Value = nv;
+				SetVScrollValue (nv);
 			} else {
 #if DEBUG
 				Console.Error.WriteLine ("setting bottom to value greater then maximum ({0}, {1})",
@@ -1896,7 +1901,7 @@
 				skipped_nodes = 0;
 				RecalculateVisibleOrder (root_node);
 				vbar.Visible = false;
-				vbar.Value = 0;
+				SetVScrollValue (0);
 				vbar_bounds_set = false;
 			}
 
@@ -2037,9 +2042,9 @@
 			}
 
 			if (e.Delta < 0) {
-				vbar.Value = Math.Min(vbar.Value + SystemInformation.MouseWheelScrollLines, vbar.Maximum - VisibleCount + 1);
+				SetVScrollValue (Math.Min(vbar.Value + SystemInformation.MouseWheelScrollLines, vbar.Maximum - VisibleCount + 1));
 			} else {
-				vbar.Value = Math.Max(0, vbar.Value - SystemInformation.MouseWheelScrollLines);
+				SetVScrollValue (Math.Max(0, vbar.Value - SystemInformation.MouseWheelScrollLines));
 			}
 		}
 
