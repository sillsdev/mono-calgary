#!/bin/bash

# make-source-package
#
# Create a new source package from the contents of the relevant git directories:
#
#	PROJ     libgdiplus or mono
#	PKGDIR   libgdiplus or mono
#	SRCDIR   $PKGDIR/fieldworks-$PROJ
#
# $SRCDIR is created by checkout-and-build-mono, so you should have run that first.
# The state of $SRCDIR (patched, etc.) doesn't matter, but the current revision does.
# By default, this script uses HEAD as the revision, which is a synonym for the
# currently checked out revision.
#
# Usage: make-source-package PROJ [REVISION]
#
# PROJ can be PKGDIR
# REVISION defaults to HEAD, but could be any tag, branch or hash
#
# The debian/changelog should be updated first, using dch-i "" to create a new entry,
# and then an editor to fill in information about the change. You should set
# DEBEMAIL and DEBFULLNAME in your .profile or environment to make this work properly.

# Abort on any kind of error
set -e -o pipefail

# Input parameters, from the command line
PROJ=${1?}
REVISION=${2-quilt-base}

# Figure out directory names
PROJ=${PROJ#fieldworks-}
PROJ=${PROJ%/}
PKGDIR=$PROJ
SRCDIR=$PKGDIR/fieldworks-$PROJ

# Obtain package name and version
cd $PKGDIR
NAME=$(dpkg-parsechangelog | sed -n '/^Source: /s///p')
VERSION=$(dpkg-parsechangelog | sed -n '/^Version: /s///p')
UPSTREAM=$(sed 's/-[^-]*$//' <<<$VERSION)
cd $OLDPWD

# Prepare source
cd $SRCDIR
git reset --hard -q
git clean -dxf -q
git checkout -q $REVISION
git describe --tags >DESCRIPTION
[ -e configure ] || NOCONFIGURE=1 ./autogen.sh
cd $OLDPWD

# Create original source tarball
cd $PKGDIR
TARBALL=${NAME}_${UPSTREAM}.orig.tar.gz
if [ ! -e $TARBALL ]
then
	echo "Creating $TARBALL"
	tar -czf $TARBALL --exclude-vcs ${SRCDIR#$PKGDIR/}
fi
cd $OLDPWD

# Prepare source package
cp -a $PKGDIR/debian $SRCDIR/debian

# Create source package
cd $SRCDIR
debuild -S
cd $OLDPWD

# Put things back as they were
cd $SRCDIR
git reset --hard -q
git clean -dxf -q
PREV=$(git describe --all HEAD@{1})
git checkout -q ${PREV#heads/}
cd $OLDPWD
