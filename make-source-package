#!/bin/bash

# make-source-package
#
# Create a new source package from the contents of the relevant git directories:
#
#	PROJ     libgdiplus or mono
#	PKGDIR   libgdiplus or mono
#	SRCDIR   $PKGDIR/fieldworks-$PROJ
#
# $SRCDIR is created by checkout-and-build-mono, so you should have run that first.
# The state of $SRCDIR (patched, etc.) doesn't matter, but the current revision does.
# By default, this script uses HEAD as the revision, which is a synonym for the
# currently checked out revision.
#
# Usage: make-source-package PROJ [REVISION]
#
# PROJ can be PKGDIR
# REVISION defaults to HEAD, but could be any tag, branch or hash
#
# The debian/changelog should be updated first, using dch-i "" to create a new entry,
# and then an editor to fill in information about the change. You should set
# DEBEMAIL and DEBFULLNAME in your .profile or environment to make this work properly.

# Abort on any kind of error
set -e -o pipefail

# Input parameters, from the command line
PROJ=${1?}
REVISION=${2-HEAD}

# Figure out directory names
PROJ=${PROJ#fieldworks-}
PKGDIR=$PROJ
SRCDIR=$PKGDIR/fieldworks-$PROJ

# Obtain package name and version
cd $PKGDIR
NAME=$(dpkg-parsechangelog | sed -n '/^Source: /s///p')
VERSION=$(dpkg-parsechangelog | sed -n '/^Version: /s///p')
UPSTREAM=$(sed 's/-[^-]*$//' <<<$VERSION)
cd $OLDPWD

# Prepare source
cd $SRCDIR
git reset --hard -q
git clean -dxf -q
git describe --tags $REVISION >DESCRIPTION
NOCONFIGURE=1 ./autogen.sh
cd $OLDPWD

# Create original source tarball
tar -czf ${NAME}_${UPSTREAM}.orig.tar.gz --exclude-vcs -C $PKGDIR fieldworks-$PROJ

# Create source package
cp -a $PKGDIR/debian $SRCDIR/debian
dpkg-source -b $SRCDIR
(cd $PKGDIR; dpkg-genchanges -S) >${NAME}_${VERSION}_source.changes
